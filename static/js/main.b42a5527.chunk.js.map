{"version":3,"sources":["components/HeaderMenu.js","components/Footer.js","components/Slider.js","components/SpinnerLoading.js","components/WrapContainer.js","components/PageTitle.js","components/TableResponsive.js","routers/AppRouter.js","services/bannerService.js","services/TournamentService.js","pages/HomePage.js","helpers/utilsHelper.js","pages/tournament/TournamentDetail.js","pages/tournament/TournamentRouter.js","pages/tournament/TournamentPage.js","configs/appPagesConfig.js","pages/AppPage.js","pages/NotFoundPage.js","App.js","reportWebVitals.js","fonts/DB Ozone X v3.2_0.ttf","index.js"],"names":["HeaderMenu","className","pageConfig","Navbar","collapseOnSelect","expand","variant","sticky","Brand","href","alt","src","style","height","Toggle","aria-controls","Collapse","id","Nav","filter","m","isHeaderMenu","map","index","Link","active","window","location","pathname","fontSize","title","PATHERS_ITEMS","imageSrc","PatherContainer","items","r","width","maxWidth","maxHeight","Footer","pathersItems","Slider","autoplay","effect","url","target","SpinnerLoading","paddingTop","role","WrapContainer","children","displayName","PageTitle","text","TableResponsive","configs","datasource","c","header","rIndex","cIndex","render","sourceKey","AppRouter","exact","path","from","to","p","component","NotFoundPage","getList","a","TOURNAMENT_ITEMS","course","dateBegin","Date","toISOString","dateEnd","measurements","hole","par","yards","meters","grassType","tee","fairWay","green","getOne","find","HomePage","useState","loading","setLoading","sliderItems","setSliderItems","showError","err","console","error","useEffect","Promise","all","BannerService","then","catch","finally","length","MONTH_NAMES","begin","end","beginDate","endDate","bYear","getFullYear","eYear","bMonth","getMonth","eMonth","bDay","getDate","eDay","ordinal","TournamentDetail","props","match","params","data","setData","TournamentService","tournamentSource","firstItems","sort","r1","r2","secondItems","utilsHelper","reduce","sum","TournamentRouter","useRouteMatch","TournamentPage","tournamentItems","setTournamentItems","displayData","date","appPagesConfig","AppPage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b42a5527.chunk.js","sourcesContent":["import { Nav, Navbar } from \"react-bootstrap\"\r\n\r\nconst HeaderMenu = ({\r\n    className = \"\",\r\n    pageConfig = [],\r\n}) => {    \r\n    return (\r\n        <Navbar\r\n            className={`bg-main p-3 ${className}`}\r\n            collapseOnSelect={true}\r\n            expand={\"md\"}\r\n            variant={\"dark\"}\r\n            sticky={\"top\"}\r\n        >\r\n            <Navbar.Brand>\r\n                <a href=\"home\">\r\n                    <img \r\n                        alt={'logo'} \r\n                        src={'/assets/images/logo.png'} \r\n                        style={{ height: \"60px\" }}\r\n                    />\r\n                </a>\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    {pageConfig\r\n                        .filter(m => m.isHeaderMenu)\r\n                        .map((m, index) => (\r\n                            <Nav.Link \r\n                                key={`menu_${index}`} \r\n                                href={m.href}\r\n                                active={window.location.pathname === `${m.href}`}\r\n                            >\r\n                                <b style={{ fontSize:\"18px\" }}>{m.title}</b>\r\n                            </Nav.Link>\r\n                        ))}\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default HeaderMenu","import { WrapContainer } from './'\r\n\r\nconst PATHERS_ITEMS = [\r\n    { imageSrc: \"/assets/images/pathers/logo ThaiWPGA on White.png\" },\r\n    { imageSrc: \"/assets/images/pathers/logo pc steel.png\" },\r\n    { imageSrc: \"/assets/images/pathers/logo scb on white.png\" },\r\n    { imageSrc: \"/assets/images/pathers/logo secon on white.png\" },\r\n    { imageSrc: \"/assets/images/pathers/logo ple on white.png\" },\r\n    { imageSrc: \"/assets/images/pathers/logo unique on white.png\" },\r\n    { imageSrc: \"/assets/images/pathers/logo italien on white.png\" },\r\n    { imageSrc: \"/assets/images/pathers/logo Phoniex on white.png\" },\r\n]\r\n\r\nconst PatherContainer = ({\r\n    items = [],\r\n}) => {\r\n    return (\r\n        <WrapContainer>\r\n            <div className=\"d-flex justify-content-center flex-wrap py-2\">\r\n                {items.map((r, index) => (\r\n                    <div\r\n                        key={`pather_${index}`} \r\n                        className=\"d-flex justify-content-center align-items-center\"\r\n                    >\r\n                        <img\r\n                            className=\"mx-4 my-3\"\r\n                            style={{\r\n                                width: \"auto\",\r\n                                height: \"auto\",\r\n                                maxWidth: \"80px\",\r\n                                maxHeight: \"80px\",\r\n                            }}\r\n                            alt={`pather_${index}`}\r\n                            src={r.imageSrc}\r\n                        />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </WrapContainer>\r\n        \r\n    )\r\n}\r\n\r\nconst Footer = () => {\r\n    const pathersItems = PATHERS_ITEMS\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column\">\r\n            <div className=\"bg-main\">\r\n                <PatherContainer items={pathersItems} />\r\n            </div>\r\n            <div className=\"bg-dark d-flex justify-content-center py-1 text-light\">\r\n                <small>Copyright (c) 2021</small>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import { Carousel } from 'antd'\r\n\r\nconst Slider = ({\r\n    className = '',\r\n    items = [],\r\n}) => {\r\n    return (\r\n        <div className={className}>\r\n            <Carousel\r\n                autoplay={true}\r\n                effect={`fade`}\r\n            >\r\n                {items.map((r, index) => (\r\n                    <div\r\n                        key={`slider_${index}`} \r\n                        className=\"d-flex justify-content-center\"\r\n                    >\r\n                        {r.url \r\n                            ? <a \r\n                                className=\"w-100\" \r\n                                href={r.url}\r\n                                target={r.target}\r\n                            >\r\n                                <img \r\n                                    className=\"w-100\"\r\n                                    alt={`slider_${index}`} \r\n                                    src={r.imageSrc}\r\n                                />\r\n                            </a>\r\n                            : <img \r\n                                className=\"w-100\"\r\n                                alt={`slider_${index}`} \r\n                                src={r.imageSrc}\r\n                            />}\r\n                    </div>\r\n                ))}\r\n            </Carousel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Slider","const SpinnerLoading = () => {\r\n    return (\r\n        <div \r\n            className=\"d-flex justify-content-center\" \r\n            style={{ paddingTop: \"22vh\" }}\r\n        >\r\n            <div className=\"spinner-border text-secondary\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default SpinnerLoading","\r\nconst WrapContainer = ({\r\n    className = '',\r\n    children,\r\n}) => {\r\n    return (\r\n        <div className={`container ${className}`}>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col col-12\">\r\n                    {children && children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nWrapContainer.displayName = 'WrapContainer'\r\nexport default WrapContainer","import { WrapContainer } from './'\r\n\r\nconst PageTitle = ({\r\n    text = \"{{PageTitle}}\",\r\n}) => {\r\n    return (\r\n        <WrapContainer className=\"page-title mt-3\">\r\n            <h3 className=\"text-title\">\r\n                {text}\r\n            </h3>\r\n        </WrapContainer>\r\n        \r\n    )\r\n}\r\n\r\nexport default PageTitle","import 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css'\r\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table'\r\nimport '../css/tableResponsive.css'\r\nconst TableResponsive = ({\r\n    configs = [],\r\n    datasource = [],\r\n}) => {\r\n    return (\r\n        <div className=\"tb-responsive\">\r\n            <Table>\r\n                <Thead>\r\n                    <Tr>\r\n                        {configs.map((c, index) => <Th key={`tb_h_${index}`}>{c.header.title}</Th>)}\r\n                    </Tr>\r\n                </Thead>\r\n                <Tbody>\r\n                    {datasource.map((r, rIndex) => (\r\n                        <Tr key={`tb_r_${rIndex}`}>\r\n                            {configs.map((c, cIndex) => {\r\n                                return (\r\n                                    <Td key={`tb_c_${cIndex}`}>\r\n                                        {c.render \r\n                                            ? c.render(r, rIndex)\r\n                                            : r[c.sourceKey]}\r\n                                    </Td>\r\n                                )\r\n                            })}\r\n                        </Tr>\r\n                    ))}\r\n                </Tbody>\r\n            </Table>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nTableResponsive.displayName = 'TableResponsive'\r\nexport default TableResponsive","import React from 'react'\r\nimport { \r\n    BrowserRouter as Router, \r\n    Switch, \r\n    Route, \r\n    Redirect \r\n} from 'react-router-dom'\r\nimport { NotFoundPage } from '../pages'\r\n\r\nconst AppRouter = ({\r\n    pageConfig = [],\r\n}) => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact={true} path=\"/\">\r\n                    <Redirect from=\"/\" to=\"/home\" />\r\n                </Route>\r\n                {pageConfig.map((p, index) => (\r\n                     <Route \r\n                        key={`app_router_${index}`}\r\n                        path={`${p.href}`}\r\n                        component={p.component}\r\n                    />\r\n                ))}\r\n                <Route\r\n                    path=\"/*\"\r\n                    component={NotFoundPage}\r\n                  />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter","\r\n\r\nclass BannerService {\r\n    getList = async () => {\r\n        // await new Promise(r => setTimeout(r, 500))\r\n        return [\r\n            {\r\n                imageSrc: `/assets/images/banners/banner.jpg`,\r\n                url: \"tournament\",\r\n                target: \"_self\",\r\n            },\r\n        ]\r\n    }\r\n}\r\n\r\nexport default new BannerService()","\r\nconst MEASUREMENTS = [\r\n    {\r\n        hole: 1,\r\n        par: 4,\r\n        yards: 362,\r\n        meters: 331\r\n    },\r\n    {\r\n        hole: 2,\r\n        par: 5,\r\n        yards: 520,\r\n        meters: 476\r\n    },\r\n    {\r\n        hole: 3,\r\n        par: 4,\r\n        yards: 414,\r\n        meters: 379\r\n    },\r\n    {\r\n        hole: 4,\r\n        par: 3,\r\n        yards: 177,\r\n        meters: 162\r\n    },\r\n    {\r\n        hole: 5,\r\n        par: 4,\r\n        yards: 331,\r\n        meters: 303\r\n    },\r\n    {\r\n        hole: 6,\r\n        par: 4,\r\n        yards: 392,\r\n        meters: 358\r\n    },\r\n    {\r\n        hole: 7,\r\n        par: 5,\r\n        yards: 474,\r\n        meters: 433\r\n    },\r\n    {\r\n        hole: 8,\r\n        par: 3,\r\n        yards: 173,\r\n        meters: 158\r\n    },\r\n    {\r\n        hole: 9,\r\n        par: 4,\r\n        yards: 383,\r\n        meters: 350\r\n    },\r\n    {\r\n        hole: 10,\r\n        par: 4,\r\n        yards: 366,\r\n        meters: 335\r\n    },\r\n    {\r\n        hole: 11,\r\n        par: 4,\r\n        yards: 344,\r\n        meters: 315\r\n    },\r\n    {\r\n        hole: 12,\r\n        par: 4,\r\n        yards: 343,\r\n        meters: 314\r\n    },\r\n    {\r\n        hole: 13,\r\n        par: 5,\r\n        yards: 496,\r\n        meters: 454\r\n    },\r\n    {\r\n        hole: 14,\r\n        par: 3,\r\n        yards: 159,\r\n        meters: 145\r\n    },\r\n    {\r\n        hole: 15,\r\n        par: 4,\r\n        yards: 388,\r\n        meters: 355\r\n    },\r\n    {\r\n        hole: 16,\r\n        par: 3,\r\n        yards: 149,\r\n        meters: 136\r\n    },\r\n    {\r\n        hole: 17,\r\n        par: 4,\r\n        yards: 364,\r\n        meters: 333\r\n    },\r\n    {\r\n        hole: 18,\r\n        par: 5,\r\n        yards: 493,\r\n        meters: 451\r\n    }\r\n]\r\n\r\nconst GRASS_TYPE = {\r\n    tee: \"Paspalum\",\r\n    fairWay: \"Zoyzia\",\r\n    green: \"Champion Turf\",\t\t\t\t\r\n}\r\n\r\nconst TOURNAMENT_ITEMS = [\r\n    {\r\n        id: 1,\r\n        course: \"Phoenix Gold Golf & Country Club\",\r\n        dateBegin: new Date(\"2021-03-26 00:00:00+07:00\").toISOString(),\r\n        dateEnd: new Date(\"2021-03-28 00:00:00+07:00\").toISOString(),\r\n        measurements: MEASUREMENTS,\r\n        grassType: GRASS_TYPE, \r\n    },\r\n    // {\r\n    //     id: 2,\r\n    //     course: \"Phoenix Gold Golf & Country Club (Test1)\",\r\n    //     dateBegin: new Date(\"2021-03-26 00:00:00+07:00\").toISOString(),\r\n    //     dateEnd: new Date(\"2021-04-28 00:00:00+07:00\").toISOString(),\r\n    //     measurements: MEASUREMENTS,\r\n    //     grassType: GRASS_TYPE, \r\n    // },\r\n    // {\r\n    //     id: 3,\r\n    //     course: \"Phoenix Gold Golf & Country Club (Test2)\",\r\n    //     dateBegin: new Date(\"2021-03-26 00:00:00+07:00\").toISOString(),\r\n    //     dateEnd: new Date(\"2022-04-28 00:00:00+07:00\").toISOString(),\r\n    //     measurements: MEASUREMENTS,\r\n    //     grassType: GRASS_TYPE, \r\n    // },\r\n]\r\n\r\nclass TournamentService {\r\n    getList = async () => {\r\n        // await new Promise(r => setTimeout(r, 500))\r\n        return TOURNAMENT_ITEMS\r\n    }\r\n\r\n    getOne = async id => {\r\n        // await new Promise(r => setTimeout(r, 500))\r\n        return TOURNAMENT_ITEMS.find(r => r.id == id)\r\n    }\r\n}\r\n\r\nexport default new TournamentService()","import React, { useEffect, useState } from 'react'\r\nimport { Slider, SpinnerLoading } from '../components'\r\nimport { BannerService } from '../services'\r\n\r\nconst HomePage = () => {\r\n\r\n    const [loading, setLoading] = useState(true)\r\n    const [sliderItems, setSliderItems] = useState([])\r\n    \r\n    const showError = err => {\r\n        // setStateShowError\r\n        console.error(err)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        Promise.all([\r\n            BannerService.getList(),\r\n        ])\r\n            .then(([\r\n                sliderDatasource = [],\r\n            ]) => {\r\n                setSliderItems(sliderDatasource)\r\n            })\r\n            .catch(showError)\r\n            .finally(() => {\r\n                setLoading(false)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column\">\r\n            {loading && <SpinnerLoading/>}\r\n\r\n            {!loading && sliderItems.length > 0 &&\r\n                <Slider\r\n                    items={sliderItems}\r\n                />}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default HomePage","import * as ordinal from 'ordinal-number-suffix'\r\n\r\nconst MONTH_NAMES = [\r\n    \"January\", \r\n    \"February\", \r\n    \"March\", \r\n    \"April\", \r\n    \"May\", \r\n    \"June\",\r\n    \"July\", \r\n    \"August\", \r\n    \"September\", \r\n    \"October\", \r\n    \"November\", \r\n    \"December\",\r\n];\r\n\r\nconst toDisplayDate = ({\r\n    begin,\r\n    end,\r\n}) => {\r\n    const beginDate = new Date(begin)\r\n    const endDate = new Date(end)\r\n\r\n    const bYear = beginDate.getFullYear()\r\n    const eYear = endDate.getFullYear()\r\n    const bMonth = beginDate.getMonth()\r\n    const eMonth = endDate.getMonth()\r\n    const bDay = beginDate.getDate()\r\n    const eDay = endDate.getDate()\r\n    \r\n    if ((bYear === eYear) && (bMonth === eMonth)){\r\n        return `${ordinal(bDay)} - ${ordinal(eDay)} ${MONTH_NAMES[bMonth]} ${bYear}`\r\n    } else if (bYear === eYear){\r\n        return `${ordinal(bDay)} ${MONTH_NAMES[bMonth]} - ${ordinal(eDay)} ${MONTH_NAMES[eMonth]} ${bYear}`\r\n    } else{\r\n        return `${ordinal(bDay)} ${MONTH_NAMES[bMonth]} ${bYear} - ${ordinal(eDay)} ${MONTH_NAMES[eMonth]} ${eYear}`\r\n    }\r\n}\r\n\r\nexport default {\r\n    toDisplayDate,\r\n}","import { useState, useEffect } from 'react'\r\nimport { \r\n    PageTitle, \r\n    SpinnerLoading,\r\n    WrapContainer, \r\n} from '../../components'\r\nimport { TournamentService } from '../../services'\r\nimport { utilsHelper } from '../../helpers'\r\n\r\nconst TournamentDetail = props => {\r\n    const { id } = props.match.params\r\n    \r\n    const [loading, setLoading] = useState(false)\r\n    const [data, setData] = useState(null)\r\n\r\n    const showError = err => console.error(err)\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        Promise.all([\r\n            TournamentService.getOne(id),\r\n        ])\r\n            .then(([\r\n                tournamentSource,\r\n            ]) => {\r\n                setData(tournamentSource)\r\n            })\r\n            .catch(showError)\r\n            .finally(() => setLoading(false))\r\n    }, [])\r\n\r\n    const { measurements = [] } = data || {}\r\n    const firstItems = measurements\r\n        .filter(r => r.hole <= 9)\r\n        .sort((r1, r2) => r1.hole < r2.hole ? -1 : r1.hole < r2.hole ? 1 : 0)\r\n    const secondItems = measurements\r\n        .filter(r => r.hole > 9)\r\n        .sort((r1, r2) => r1.hole < r2.hole ? -1 : r1.hole < r2.hole ? 1 : 0)\r\n\r\n    return (\r\n        <div>\r\n            {loading && <SpinnerLoading/>}\r\n            {!loading && \r\n                <>\r\n                    <PageTitle  text={\"Course Measurements\"}/>\r\n                    <WrapContainer className=\"pt-3 pb-4\">\r\n                        {data && \r\n                            <div className=\"d-flex flex-column\">\r\n                                {/*  */}\r\n                                <div className=\"d-flex flex-wrap\">\r\n                                    <div className=\"flex-fill flex-column\">\r\n                                        <div className=\"d-flex m-1\">\r\n                                            <div className=\"text-title\" style={{ width:\"80px\" }}>\r\n                                                <b>{`Course:`}</b>\r\n                                            </div>\r\n                                            <div className=\"flex-fill\">\r\n                                                {data.course}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"d-flex m-1\">\r\n                                            <div className=\"text-title\" style={{ width:\"80px\" }}>\r\n                                                <b>{`Date:`}</b>\r\n                                            </div>\r\n                                            <div className=\"flex-fill\">\r\n                                                {utilsHelper.toDisplayDate({\r\n                                                    begin: data.dateBegin,\r\n                                                    end: data.dateEnd,\r\n                                                })}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"flex-fill\">\r\n                                        <div className=\"d-flex justify-content-end\">\r\n                                            <div className=\"text-title m-1\" style={{ width:\"80px\" }}>\r\n                                                <b>{`Grass Type:`}</b>\r\n                                            </div>\r\n                                            <div className=\"flex-fill d-flex flex-wrap\">\r\n                                                <div className=\"flex-fill d-flex flex-column m-1\">\r\n                                                    <div className=\"text-center text-title bg-alt\" >\r\n                                                        <b>{`Tee`}</b>\r\n                                                    </div>\r\n                                                    <div className=\"text-center mt-1\">\r\n                                                        {data.grassType.tee}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"flex-fill d-flex flex-column m-1\">\r\n                                                    <div className=\"text-center text-title bg-alt\" >\r\n                                                        <b>{`Fair Way`}</b>\r\n                                                    </div>\r\n                                                    <div className=\"text-center mt-1\">\r\n                                                        {data.grassType.fairWay}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"flex-fill d-flex flex-column m-1\">\r\n                                                    <div className=\"text-center text-title bg-alt\" >\r\n                                                        <b>{`Green`}</b>\r\n                                                    </div>\r\n                                                    <div className=\"text-center mt-1\">\r\n                                                        {data.grassType.green}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* firstItems  */}\r\n                                <div className=\"container mt-4\">\r\n                                    <div className=\"row flex-nowrap\">\r\n                                        <div className=\"col p-1 text-title bg-alt\">\r\n                                            <b>{`Hole:`}</b>\r\n                                        </div>\r\n                                        {firstItems.map((r, index) => (\r\n                                            <div\r\n                                                key={`first_item_hole_${index}`} \r\n                                                className=\"col p-1 text-center text-title bg-alt\"\r\n                                            >\r\n                                                <b>{r.hole}</b>\r\n                                            </div>\r\n                                        ))}\r\n                                        <div className=\"col p-1 text-center text-title bg-alt\">\r\n                                            <u><b>{`Out`}</b></u>\r\n                                        </div>\r\n                                        <div className=\"col p-1\">\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row flex-nowrap\">\r\n                                        <div className=\"col p-1 text-title\">\r\n                                            <b>{`Par:`}</b>\r\n                                        </div>\r\n                                        {firstItems.map((r, index) => (\r\n                                            <div\r\n                                                key={`first_item_par_${index}`}  \r\n                                                className=\"col p-1 text-center border\"\r\n                                            >\r\n                                                {r.par}\r\n                                            </div>\r\n                                        ))}\r\n                                        <div className=\"col p-1 text-center border\">\r\n                                            {firstItems.reduce((sum, r) => sum + r.par, 0)}\r\n                                        </div>\r\n                                        <div className=\"col p-1\">\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row flex-nowrap\">\r\n                                        <div className=\"col p-1 text-title\">\r\n                                            <b>{`Yards:`}</b>\r\n                                        </div>\r\n                                        {firstItems.map((r, index) => (\r\n                                            <div \r\n                                                key={`first_item_yards_${index}`}  \r\n                                                className=\"col p-1 text-center border\"\r\n                                            >\r\n                                                {r.yards}\r\n                                            </div>\r\n                                        ))}\r\n                                        <div className=\"col p-1 text-center border\">\r\n                                            {firstItems.reduce((sum, r) => sum + r.yards, 0)}\r\n                                        </div>\r\n                                        <div className=\"col p-1\">\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row flex-nowrap\">\r\n                                        <div className=\"col p-1 text-title\">\r\n                                            <b>{`Meters:`}</b>\r\n                                        </div>\r\n                                        {firstItems.map((r, index) => (\r\n                                            <div \r\n                                                key={`first_item_meters_${index}`}  \r\n                                                className=\"col p-1 text-center border\"\r\n                                            >\r\n                                                {r.meters}\r\n                                            </div>\r\n                                        ))}\r\n                                        <div className=\"col p-1 text-center border\">\r\n                                            {firstItems.reduce((sum, r) => sum + r.meters, 0)}\r\n                                        </div>\r\n                                        <div className=\"col p-1\">\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* secondItems  */}\r\n                                <div className=\"container mt-4\">\r\n                                    <div className=\"row flex-nowrap\">\r\n                                        <div className=\"col p-1 text-title bg-alt\">\r\n                                            <b>{`Hole:`}</b>\r\n                                        </div>\r\n                                        {secondItems.map((r, index) => (\r\n                                            <div \r\n                                                key={`second_item_hole_${index}`}  \r\n                                                className=\"col p-1 text-center text-title bg-alt\"\r\n                                            >\r\n                                                <b>{r.hole}</b>\r\n                                            </div>\r\n                                        ))}\r\n                                        <div className=\"col p-1 text-center text-title bg-alt\">\r\n                                            <u><b>{`In`}</b></u>\r\n                                        </div>\r\n                                        <div className=\"col p-1 text-center text-title bg-alt\">\r\n                                            <u><b>{`Total`}</b></u>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row flex-nowrap\">\r\n                                        <div className=\"col p-1 text-title\">\r\n                                            <b>{`Par:`}</b>\r\n                                        </div>\r\n                                        {secondItems.map((r, index) => (\r\n                                            <div \r\n                                                key={`second_item_par_${index}`}  \r\n                                                className=\"col p-1 text-center border\"\r\n                                            >\r\n                                                {r.par}\r\n                                            </div>\r\n                                        ))}\r\n                                        <div className=\"col p-1 text-center border\">\r\n                                            {secondItems.reduce((sum, r) => sum + r.par, 0)}\r\n                                        </div>\r\n                                        <div className=\"col p-1 text-center border\">\r\n                                            {measurements.reduce((sum, r) => sum + r.par, 0)}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row flex-nowrap\">\r\n                                        <div className=\"col p-1 text-title\">\r\n                                            <b>{`Yards:`}</b>\r\n                                        </div>\r\n                                        {secondItems.map((r, index) => (\r\n                                            <div \r\n                                                key={`second_item_yards_${index}`}  \r\n                                                className=\"col p-1 text-center border\"\r\n                                            >\r\n                                                {r.yards}\r\n                                            </div>\r\n                                        ))}\r\n                                        <div className=\"col p-1 text-center border\">\r\n                                            {secondItems.reduce((sum, r) => sum + r.yards, 0)}\r\n                                        </div>\r\n                                        <div className=\"col p-1 text-center border\">\r\n                                            {measurements.reduce((sum, r) => sum + r.yards, 0)}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row flex-nowrap\">\r\n                                        <div className=\"col p-1 text-title\">\r\n                                            <b>{`Meters:`}</b>\r\n                                        </div>\r\n                                        {secondItems.map((r, index) => (\r\n                                            <div \r\n                                                key={`second_item_meters_${index}`}  \r\n                                                className=\"col p-1 text-center border\"\r\n                                            >\r\n                                                {r.meters}\r\n                                            </div>\r\n                                        ))}\r\n                                        <div className=\"col p-1 text-center border\">\r\n                                            {secondItems.reduce((sum, r) => sum + r.meters, 0)}\r\n                                        </div>\r\n                                        <div className=\"col p-1 text-center border\">\r\n                                            {measurements.reduce((sum, r) => sum + r.meters, 0)}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n                        \r\n                    </WrapContainer>\r\n                </>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nTournamentDetail.displayName = 'TournamentDetail'\r\nexport default TournamentDetail","import React from 'react'\r\nimport { \r\n    Switch, \r\n    Route, \r\n    useRouteMatch \r\n} from 'react-router-dom'\r\nimport { TournamentPage } from '.'\r\nimport TournamentDetail from './TournamentDetail'\r\n\r\nconst TournamentRouter = () => {\r\n    const { path } = useRouteMatch()\r\n\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route \r\n                    path={`${path}/:id`}\r\n                    component={TournamentDetail}\r\n                />\r\n                <Route \r\n                    path={`/`}\r\n                    component={TournamentPage}\r\n                />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TournamentRouter","import React, { useEffect, useState } from 'react'\r\nimport * as ordinal from 'ordinal-number-suffix'\r\nimport { \r\n    PageTitle, \r\n    SpinnerLoading,\r\n    WrapContainer, \r\n    TableResponsive \r\n} from '../../components'\r\nimport { TournamentService } from '../../services'\r\nimport { utilsHelper } from '../../helpers'\r\n\r\nconst TournamentPage = () => {\r\n\r\n    const [loading, \r\n        setLoading] = useState(true)\r\n    const [tournamentItems, setTournamentItems] = useState([])\r\n    \r\n    const showError = err => console.error(err)\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        Promise.all([\r\n            TournamentService.getList(),\r\n        ])\r\n            .then(([\r\n                tournamentDatasource = [],\r\n            ]) => {\r\n                setTournamentItems(tournamentDatasource)\r\n            })\r\n            .catch(showError)\r\n            .finally(() => {\r\n                setLoading(false)\r\n            })\r\n    }, [])\r\n\r\n    const displayData = tournamentItems.map(r => ({\r\n       ...r,\r\n       date: utilsHelper.toDisplayDate({\r\n           begin: r.dateBegin,\r\n           end: r.dateEnd,\r\n       }),\r\n    }))\r\n\r\n    return (\r\n        <div>\r\n            {loading && <SpinnerLoading/>}\r\n            {!loading && \r\n                <>\r\n                    <PageTitle  text={\"Tournaments\"}/>\r\n                    <WrapContainer className=\"pt-3\">\r\n                        <TableResponsive\r\n                            configs={[\r\n                                {\r\n                                    header: {\r\n                                        title: \"Date\",\r\n                                    },\r\n                                    sourceKey: \"date\"\r\n                                },\r\n                                {\r\n                                    header: {\r\n                                        title:\"Course\",\r\n                                    },\r\n                                    sourceKey: \"course\",\r\n                                    render: r => (\r\n                                        <a\r\n                                            className=\"text-underline\"  \r\n                                            href={`/tournaments/${r.id}`}\r\n                                        >\r\n                                            <u>{r.course}</u>\r\n                                        </a>\r\n                                    )\r\n                                },\r\n                            ]}\r\n                            datasource={displayData}\r\n                        />\r\n                    </WrapContainer>\r\n                </>}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default TournamentPage","import HomePage from '../pages/HomePage'\r\nimport { TournamentRouter } from '../pages/tournament'\r\n\r\nconst appPagesConfig = [\r\n    {\r\n        title: \"Home\",\r\n        href: '/home',\r\n        component: HomePage,\r\n        isHeaderMenu: true,\r\n    },\r\n    {\r\n        title: \"Tournaments\",\r\n        href: '/tournaments',\r\n        component: TournamentRouter,\r\n        isHeaderMenu: true,\r\n    }\r\n]\r\n\r\nexport default appPagesConfig","import '../css/appPage.css'\r\nimport { \r\n    HeaderMenu,\r\n    Footer,\r\n} from '../components'\r\nimport { AppRouter } from '../routers'\r\nimport { appPagesConfig } from '../configs'\r\n\r\nconst AppPage = () => {\r\n    return (\r\n        <div className=\"d-flex flex-column h-100\">\r\n            <HeaderMenu className=\"mb-1 shadow-b\" pageConfig={appPagesConfig} />\r\n            <div \r\n                className=\"flex-fill\"\r\n            >\r\n                <AppRouter pageConfig={appPagesConfig} />\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppPage","\r\n\r\nconst NotFoundPage = () => {\r\n    return (\r\n        <div>\r\n            {'Notfound Page.'}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFoundPage","import 'antd/dist/antd.css'\r\nimport { AppPage } from './pages'\r\n\r\nfunction App() {\r\n  return <AppPage/>\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/DB Ozone X v3.2_0.ddaf6b2c.ttf\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './fonts/DB Ozone X v3.2_0.ttf'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}